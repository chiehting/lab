http:
  routers:
    searxng:
      rule: HostRegexp(`.+`)
      entryPoints:
        - "web"
        - "websecure"
      service: "searxng-service"
      middlewares:
        - "security-headers"
        - "content-compress"
      tls: {}
        # certResolver: "letsesolver"
  services:
    searxng-service:
      loadBalancer:
        servers:
          - url: "http://searxng.com:8080"
        healthCheck:
          port: 8080
          mode: http
          method: GET
          path: /healthz
          interval: 30s
          timeout: 10s
          scheme: http
          headers:
            X-Forwarded-For: "127.0.0.1"
            X-Real-IP: "127.0.0.1"
            User-Agent: "Traefik-Healthcheck/2.10"

  middlewares:
    security-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Forwarded-Port: "443"
        customResponseHeaders:
          X-Content-Type-Options: "nosniff"
          X-XSS-Protection: "1; mode=block"
          Referrer-Policy: "strict-origin-when-cross-origin"
          Permissions-Policy: "geolocation=(), microphone=(), camera=()"
          Server: ""
        contentSecurityPolicy: "upgrade-insecure-requests; default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; form-action 'self' https:; font-src 'self'; frame-ancestors 'self'; base-uri 'self'; connect-src 'self'; img-src * data:; frame-src https:;"
        permissionsPolicy: "accelerometer=(),camera=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),payment=(),usb=()"
        referrerPolicy: "same-origin"
        contentTypeNosniff: true
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
    content-compress:
      compress: {}

tls:
  stores:
    default:
      defaultCertificate:
        certFile: /letsencrypt/localhost.pem
        keyFile: /letsencrypt/localhost-key.pem
