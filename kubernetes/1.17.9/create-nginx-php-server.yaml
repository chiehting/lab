apiVersion: v1
kind: ConfigMap
metadata:
  name: files
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        #gzip  on;
        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
        location / {
          root /var/www/html;
          fastcgi_index  index.php;
          include fastcgi_params;
          fastcgi_param REQUEST_METHOD $request_method;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }
    }
  index.php: |
    <?php echo 'hello world'; ?>
  server.php: |
    <?php echo '<pre>'; print_r($_SERVER); ?>
---
apiVersion: v1
kind: Pod
metadata:
  name: php
  labels:
    app.kubernetes.io/name: test-php
    app.kubernetes.io/instance: test-php
spec:
  containers:
  - name: nginx
    image: nginx:1.19.3-alpine
    ports:
      - name: http
        containerPort: 80
        protocol: TCP
    volumeMounts:
      - name: "nginx"
        mountPath: /etc/nginx/conf.d/default.conf
        subPath: default.conf
      - name: "nginx"
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
  - name: php
    image: php:7.4.11-fpm-alpine3.12
    volumeMounts:
      - name: "php"
        mountPath: /var/www/html
  volumes:
  - name: "php"
    configMap:
      name: "files"
  - name: "nginx"
    configMap:
      name: "files"
      items:
        - key: "default.conf"
          path: default.conf
        - key: "nginx.conf"
          path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: php
  labels:
    app.kubernetes.io/name: test-php
    app.kubernetes.io/instance: test-php
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: test-php
    app.kubernetes.io/instance: test-php
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: php
  labels:
    app.kubernetes.io/name: test-php
    app.kubernetes.io/instance: test-php
  annotations:
    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/whitelist-source-range: 1.34.113.121/32
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      proxy_set_header X-Forwarded-For "$http_cf_connecting_ip,$remote_addr";
#      set_real_ip_from 0.0.0.0/0;
spec:
  rules:
    - host: "example.com"
      http:
        paths:
          - path: /
            backend:
              serviceName: php
              servicePort: 80

