apiVersion: v1
kind: Pod
metadata:
  name: test-python
  labels:
    app.kubernetes.io/name: test-python
    app.kubernetes.io/instance: test-python
spec:
  containers:
  - name: python
    image: python:3.12.0
    ports:
      - name: http
        containerPort: 80
        protocol: TCP
    command: ["sh"]
    stdin: true
    tty: true
#  nodeSelector:
#    kubernetes.io/hostname: 10.1.133.234
---
apiVersion: v1
kind: Service
metadata:
  name: test-python
  labels:
    app.kubernetes.io/name: test-python
    app.kubernetes.io/instance: test-python
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: test-python
    app.kubernetes.io/instance: test-python
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-python
  labels:
    app.kubernetes.io/name: test-python
    app.kubernetes.io/instance: test-python
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
    - host: api-test.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-python
                port:
                  number: 80
    - host: api-test.example.cn
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-python
                port:
                  number: 80
